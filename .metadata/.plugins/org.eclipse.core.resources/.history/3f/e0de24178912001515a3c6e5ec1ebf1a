package task4.solution;

public class MergeSort {
	public static int[] sort(int[] array) {
		return splitArray(array, 0, array.length - 1);
	}
	
	private static int[] splitArray(int[] array, int begin, int end) {
		if (end == begin) {
			int[] temp = new int[1];
			temp[0] = array[begin];
			return temp;
		} else {
//			splitArray(array, begin, end / 2);
//			splitArray(array, end / 2 + 1, end);
			return mergeArrays(splitArray(array, begin, (begin + end) / 2), splitArray(array, (begin + end) / 2 + 1, end));
			
		}
	}
	
	private static int[] mergeArrays(int[] arrayLeft, int[] arrayRight) {
		int size = arrayLeft.length + arrayRight.length;
		int[] result = new int[size];
		int indexLeft = 0, indexRight = 0, j = 0;
		
		for (int i = 0; i < result.length; i++) {
			if (indexLeft < arrayLeft.length) {
				if (indexRight < arrayRight.length && arrayLeft[indexLeft] > arrayRight[indexRight]) {
					result[i] = arrayRight[indexRight];
					indexRight++;
				} else {
					result[i] = arrayLeft[indexLeft];
					indexLeft++;
				}
			} else {
				if (indexRight < arrayRight.length) {
					result[i] = arrayRight[indexRight];
					indexRight++;
				}
			}
		}
		
		return result;
	}
}
